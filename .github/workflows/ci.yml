name: Helm CI (simple)

on:
  pull_request:
  push:
    branches: [ develop ]

env:
  CHART_PATH: ./djangoapp-helm-charts/todoapp-web
  VALUES_CI: overlays/ci/values-ci.yaml
  APP_NS: todoapp-web-ns
  APP_DEPLOY: todoapp-deployment
  APP_SVC_NAME: todoapp-web-service
  READY_PATH: /api/ready
  READY_PORT: "80"

jobs:
  helm-validate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.14.4

      - name: Helm deps
        run: helm dependency update "${CHART_PATH}"

      - name: Helm lint
        run: helm lint "${CHART_PATH}"

      - name: Render chart (base)
        run: helm template test "${CHART_PATH}" >/dev/null

      - name: Render chart (CI values)
        run: helm template test "${CHART_PATH}" -f "${VALUES_CI}" >/dev/null

  e2e-kind:
    runs-on: ubuntu-latest
    needs: helm-validate
    steps:
      - uses: actions/checkout@v4

      - name: Setup kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: v1.29.2

      - name: Setup Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.14.4

      - name: Create kind cluster
        uses: helm/kind-action@v1
        with:
          cluster_name: helm-ci

      - name: Create namespace
        run: kubectl create ns "${APP_NS}"

      # У CI-оверлеї повинні бути: replicaCount=1, persistence.enabled=false,
      # monitoring.serviceMonitor.enabled=false, monitoring.rules.enabled=false
      - name: Install chart (CI values)
        run: |
          helm upgrade --install todoapp "${CHART_PATH}" \
            -n "${APP_NS}" -f "${VALUES_CI}" \
            --atomic --timeout 10m

      - name: Wait for deployment to be Ready
        run: kubectl -n "${APP_NS}" rollout status deploy/${APP_DEPLOY} --timeout=180s

      - name: In-cluster smoke check (/api/ready)
        run: |
          kubectl -n "${APP_NS}" run curl --image=curlimages/curl:8.7.1 --rm --restart=Never -i --quiet -- \
            sh -c "curl -fsS http://${APP_SVC_NAME}.${APP_NS}.svc:${READY_PORT}${READY_PATH}"

      - name: Show diagnostics on failure
        if: failure()
        run: |
          kubectl get pods -A -o wide || true
          kubectl -n "${APP_NS}" describe deploy/${APP_DEPLOY} || true
          kubectl -n "${APP_NS}" logs -l app=todoapp --tail=200 --all-containers || true
